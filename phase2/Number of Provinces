class Solution {
    public int findCircleNum(int[][] isConnected) {
        int n= isConnected.length;
        ArrayList<ArrayList<Integer>> adj= new ArrayList<>();
        for(int i=0;i<n;i++){
            adj.add(new ArrayList<>());
            for(int j=0;j<n;j++){
                if(i!=j & isConnected[i][j]==1){
                    adj.get(i).add(j);
                }
            }
        }
        boolean[] visited= new boolean[n];
        int provinces=0;
        for(int i=0;i<n;i++){
            if(!visited[i]){
                provinces++;
                dfs(i, adj, visited);
            }
        }
        return provinces;
    }
    public void dfs(int i, ArrayList<ArrayList<Integer>> adj, boolean[] visited){
        visited[i]= true;
        for(int nbr: adj.get(i)){
            if(!visited[nbr]) dfs(nbr, adj, visited);
        }
        return;
    }
}
